/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package guistuff;

import NonsuchInterface.NonsuchRemote;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.rmi.RemoteException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Collection;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import nonsuchclient.NonsuchClient;
import nonsuchdata.Staff;
import nonsuchdata.Subject;
import nonsuchdata.Tasks;

/**
 *
 * @author dx869
 */
public class NonsuchGUI extends javax.swing.JFrame {

    private static NonsuchRemote myServer;
    private static String staffid;
    private static String subjectId;
    private static Subject subject;
    private DefaultTableModel dtm;
    private DefaultTableModel mt;

    /**
     * Creates new form NonsuchGUI
     */
    public NonsuchGUI() {
        initComponents();
        //get myServer from nonsuch client.
        myServer = (NonsuchRemote) NonsuchClient.getServer();
        loginPane.setEnabledAt(2, false);
        loginPane.setEnabledAt(3, false);
        loginPane.setEnabledAt(4, false);
        loginPane.setEnabledAt(5, false);
        loginPane.setEnabledAt(6, false);
        loginPane.setEnabledAt(7, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginPane = new javax.swing.JTabbedPane();
        LogInPage = new javax.swing.JPanel();
        UniName = new javax.swing.JLabel();
        UserNameLabel = new javax.swing.JLabel();
        passWord = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        login = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        Messages = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        message = new javax.swing.JTextArea();
        SubjectSelection = new javax.swing.JPanel();
        selectSubject = new javax.swing.JComboBox();
        nglogin = new javax.swing.JLabel();
        fullname = new javax.swing.JLabel();
        role = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        selected = new javax.swing.JButton();
        SubjectDes = new javax.swing.JPanel();
        subjectidLabel = new javax.swing.JLabel();
        subjectnameLabel = new javax.swing.JLabel();
        contentLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ContentText = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        objectiveText = new javax.swing.JTextArea();
        updateSubject = new javax.swing.JButton();
        Assessment = new javax.swing.JPanel();
        subjectidLabel2 = new javax.swing.JLabel();
        subjectnameLabel2 = new javax.swing.JLabel();
        deletAtask = new javax.swing.JButton();
        addAtask = new javax.swing.JButton();
        updateTasks = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        taskTable = new javax.swing.JTable();
        Enrolment = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        enrolmentText = new javax.swing.JTextArea();
        updateEnrolment = new javax.swing.JButton();
        subjectidLabel4 = new javax.swing.JLabel();
        subjectnameLabel4 = new javax.swing.JLabel();
        UploadMarks = new javax.swing.JPanel();
        subjectidLabel3 = new javax.swing.JLabel();
        subjectnameLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        selectMarkBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        fileName = new javax.swing.JTextField();
        ViewMarks = new javax.swing.JPanel();
        subjectidLabel5 = new javax.swing.JLabel();
        subjectnameLabel5 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        markTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        UniName.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        UniName.setText("Nonsuch University Subject Management System ");
        UniName.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        UserNameLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        UserNameLabel.setText("Name");

        passWord.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        passWord.setText("Password");

        userName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameActionPerformed(evt);
            }
        });

        login.setText("Log In");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        jLabel1.setText("Vesion 5");

        javax.swing.GroupLayout LogInPageLayout = new javax.swing.GroupLayout(LogInPage);
        LogInPage.setLayout(LogInPageLayout);
        LogInPageLayout.setHorizontalGroup(
            LogInPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LogInPageLayout.createSequentialGroup()
                .addGroup(LogInPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LogInPageLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(UniName, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LogInPageLayout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(LogInPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UserNameLabel)
                            .addComponent(passWord))
                        .addGap(39, 39, 39)
                        .addGroup(LogInPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userName)
                            .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)))
                    .addGroup(LogInPageLayout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(166, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogInPageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(195, 195, 195))
        );
        LogInPageLayout.setVerticalGroup(
            LogInPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LogInPageLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(LogInPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(LogInPageLayout.createSequentialGroup()
                        .addComponent(UniName, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(UserNameLabel)))
                .addGap(32, 32, 32)
                .addGroup(LogInPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passWord)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80)
                .addComponent(login)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        loginPane.addTab("Login", LogInPage);

        message.setColumns(20);
        message.setRows(5);
        jScrollPane1.setViewportView(message);

        javax.swing.GroupLayout MessagesLayout = new javax.swing.GroupLayout(Messages);
        Messages.setLayout(MessagesLayout);
        MessagesLayout.setHorizontalGroup(
            MessagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
        );
        MessagesLayout.setVerticalGroup(
            MessagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MessagesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(248, Short.MAX_VALUE))
        );

        loginPane.addTab("Messages", Messages);

        selectSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectSubjectActionPerformed(evt);
            }
        });
        selectSubject.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                selectSubjectVetoableChange(evt);
            }
        });

        nglogin.setFont(new java.awt.Font("Arial Unicode MS", 1, 18)); // NOI18N
        nglogin.setText("Logged in as ");
        nglogin.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                ngloginAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        fullname.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N

        role.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial Unicode MS", 1, 18)); // NOI18N
        jLabel2.setText("Subject ");

        selected.setText("Submit");
        selected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SubjectSelectionLayout = new javax.swing.GroupLayout(SubjectSelection);
        SubjectSelection.setLayout(SubjectSelectionLayout);
        SubjectSelectionLayout.setHorizontalGroup(
            SubjectSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectSelectionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SubjectSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SubjectSelectionLayout.createSequentialGroup()
                        .addComponent(nglogin, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(fullname, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(role))
                    .addGroup(SubjectSelectionLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel2)
                        .addGap(66, 66, 66)
                        .addGroup(SubjectSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selected, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(217, Short.MAX_VALUE))
        );
        SubjectSelectionLayout.setVerticalGroup(
            SubjectSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectSelectionLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(SubjectSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nglogin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fullname)
                    .addComponent(role))
                .addGap(74, 74, 74)
                .addGroup(SubjectSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(92, 92, 92)
                .addComponent(selected, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        loginPane.addTab("Subject selection", SubjectSelection);

        contentLabel.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        contentLabel.setText("Content");

        ContentText.setColumns(20);
        ContentText.setRows(5);
        jScrollPane2.setViewportView(ContentText);

        jLabel3.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel3.setText("Objectives");

        objectiveText.setColumns(20);
        objectiveText.setRows(5);
        jScrollPane3.setViewportView(objectiveText);

        updateSubject.setText("Update");
        updateSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSubjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SubjectDesLayout = new javax.swing.GroupLayout(SubjectDes);
        SubjectDes.setLayout(SubjectDesLayout);
        SubjectDesLayout.setHorizontalGroup(
            SubjectDesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectDesLayout.createSequentialGroup()
                .addGroup(SubjectDesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SubjectDesLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(SubjectDesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2)
                            .addGroup(SubjectDesLayout.createSequentialGroup()
                                .addGroup(SubjectDesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(contentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(subjectidLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(subjectnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3)))
                    .addGroup(SubjectDesLayout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(updateSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(256, Short.MAX_VALUE))
        );
        SubjectDesLayout.setVerticalGroup(
            SubjectDesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubjectDesLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(SubjectDesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectnameLabel))
                .addGap(18, 18, 18)
                .addComponent(contentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(updateSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        loginPane.addTab("Subject description", SubjectDes);

        deletAtask.setText("Delete a task");
        deletAtask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletAtaskActionPerformed(evt);
            }
        });

        addAtask.setText("Add a task");
        addAtask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAtaskActionPerformed(evt);
            }
        });

        updateTasks.setText("Updatae tasks for subject");
        updateTasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTasksActionPerformed(evt);
            }
        });

        taskTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(taskTable);

        javax.swing.GroupLayout AssessmentLayout = new javax.swing.GroupLayout(Assessment);
        Assessment.setLayout(AssessmentLayout);
        AssessmentLayout.setHorizontalGroup(
            AssessmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AssessmentLayout.createSequentialGroup()
                .addGroup(AssessmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AssessmentLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(AssessmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AssessmentLayout.createSequentialGroup()
                                .addComponent(subjectidLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(562, 562, 562)
                                .addComponent(subjectnameLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AssessmentLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(deletAtask)
                                .addGap(18, 18, 18)
                                .addComponent(addAtask))))
                    .addGroup(AssessmentLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AssessmentLayout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(updateTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AssessmentLayout.setVerticalGroup(
            AssessmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AssessmentLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(AssessmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(subjectnameLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(subjectidLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AssessmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletAtask)
                    .addComponent(addAtask))
                .addGap(45, 45, 45)
                .addComponent(updateTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        loginPane.addTab("Assessment", Assessment);

        enrolmentText.setColumns(20);
        enrolmentText.setRows(5);
        jScrollPane4.setViewportView(enrolmentText);

        updateEnrolment.setText("Update enrolment");
        updateEnrolment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEnrolmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EnrolmentLayout = new javax.swing.GroupLayout(Enrolment);
        Enrolment.setLayout(EnrolmentLayout);
        EnrolmentLayout.setHorizontalGroup(
            EnrolmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EnrolmentLayout.createSequentialGroup()
                .addGroup(EnrolmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EnrolmentLayout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(updateEnrolment, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EnrolmentLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(subjectidLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(subjectnameLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EnrolmentLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        EnrolmentLayout.setVerticalGroup(
            EnrolmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EnrolmentLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(EnrolmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(subjectidLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(subjectnameLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(updateEnrolment, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 83, Short.MAX_VALUE))
        );

        loginPane.addTab("Enrolment", Enrolment);

        jLabel4.setText("Assessment Task");

        jLabel5.setText("File with marks");

        jButton1.setText("Select File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UploadMarksLayout = new javax.swing.GroupLayout(UploadMarks);
        UploadMarks.setLayout(UploadMarksLayout);
        UploadMarksLayout.setHorizontalGroup(
            UploadMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UploadMarksLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(UploadMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UploadMarksLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(UploadMarksLayout.createSequentialGroup()
                        .addComponent(subjectidLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(subjectnameLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(UploadMarksLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addGroup(UploadMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(selectMarkBox, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        UploadMarksLayout.setVerticalGroup(
            UploadMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UploadMarksLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(UploadMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectidLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectnameLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UploadMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectMarkBox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(UploadMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jButton1)
                .addContainerGap(243, Short.MAX_VALUE))
        );

        loginPane.addTab("Upload marks", UploadMarks);

        markTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(markTable);

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewMarksLayout = new javax.swing.GroupLayout(ViewMarks);
        ViewMarks.setLayout(ViewMarksLayout);
        ViewMarksLayout.setHorizontalGroup(
            ViewMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewMarksLayout.createSequentialGroup()
                .addGroup(ViewMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewMarksLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(ViewMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ViewMarksLayout.createSequentialGroup()
                                .addComponent(subjectidLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(subjectnameLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(ViewMarksLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton2)
                        .addGap(144, 144, 144)
                        .addComponent(jButton3)))
                .addContainerGap(213, Short.MAX_VALUE))
        );
        ViewMarksLayout.setVerticalGroup(
            ViewMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewMarksLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(ViewMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectidLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectnameLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(ViewMarksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(196, Short.MAX_VALUE))
        );

        loginPane.addTab("View marks", ViewMarks);
        loginPane.addTab("tab9", jTabbedPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(loginPane, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginPane, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed

        //check the log in vale if it is works then the rest panel will be available;

        String name = userName.getText().trim();
        String pwd = password.getText().trim();

        if (name.isEmpty() || pwd.isEmpty()) {
            String emptymessage = "Please enter name or password";
            message.setText(emptymessage);
            loginPane.setSelectedComponent(Messages);
        }
        try {
            Staff staff = myServer.staffInfo(name);
            if (staff != null) {
                //Create MessageDigest object for MD5
                MessageDigest digest = MessageDigest.getInstance("MD5");
                //Update input string in message digest
                digest.update(pwd.getBytes(), 0, pwd.length());
                //Converts message digest value in base 16 (hex) 
                String md5Pwd = new BigInteger(1, digest.digest()).toString(16);

                // after login  
                //the rest pane will available
                if (staff.getPassword().equals(md5Pwd)) {
                    loginPane.setEnabledAt(2, true);
                    loginPane.setEnabledAt(3, true);
                    loginPane.setEnabledAt(4, true);
                    loginPane.setEnabledAt(5, true);
                    // a message shows in message panel;
                    String login = "Welcone " + staff.getRole() + " : " + staff.getFullname();
                    message.setText(login);
                    loginPane.setSelectedComponent(Messages);
                    // set up the select subject panel
                    fullname.setText(staff.getFullname());
                    role.setText(staff.getRole());
                    staffid = staff.getStaffid();

                    //find subject.
                    Collection<Subject> subjects = staff.getSubjectCollection();
                    int a = subjects.size();
                    Subject[] sArray = new Subject[a];
                    subjects.toArray(sArray);
                    String[] array = new String[a];
                     System.out.println("I am setting up the combobox whith subjects: ");
                    for (int i = 0; i < a; i++) {
                        array[i] = sArray[i].getSubjectid();
                        System.out.print(array[i]+"  ");
                       
                    }
                    selectSubject.setModel(new javax.swing.DefaultComboBoxModel(array));

                }

            } else {
                String nameError = "Sorry , can not find id";
                message.setText(nameError);
                loginPane.setSelectedComponent(Messages);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }







    }//GEN-LAST:event_loginActionPerformed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

    private void ngloginAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_ngloginAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_ngloginAncestorMoved

    private void selectSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectSubjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectSubjectActionPerformed

    private void selectSubjectVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_selectSubjectVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_selectSubjectVetoableChange

    private void selectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedActionPerformed
        //get the subject id then settle the rest
        Object o = selectSubject.getSelectedItem();
        subjectId = o.toString();
        try {
            subject = myServer.subjectInfo(subjectId);
        } catch (RemoteException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        String id = subjectId;
        String title = subject.getTitle();
        String content = subject.getContent();
        String objectives = subject.getObjectives();

        if (content == null) {
            content = "TBA";
        }
        if (objectives == null) {
            content = "TBA";
        }
        subjectidLabel.setText(id);
        subjectnameLabel.setText(title);
        ContentText.setText(content);
        objectiveText.setText(objectives);
        loginPane.setEnabledAt(6, false);
        loginPane.setEnabledAt(7, false);
        setAssessment();

        try {
            setEnrolment();
        } catch (RemoteException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }



    }//GEN-LAST:event_selectedActionPerformed
    // initalize the upload marks pane

    private void setUploadMarks() throws RemoteException {
        String title = subject.getTitle();
        subjectidLabel3.setText(subjectId);
        subjectnameLabel3.setText(title);
        Tasks[] tasks = myServer.getTasks(subjectId);
        if (tasks == null) {
        } else {
            int a = tasks.length;
            String[] array = new String[a];
            for (int i = 0; i < a; i++) {
                array[i] = tasks[i].getTasksPK().getTaskid();
            }
            selectMarkBox.setModel(new javax.swing.DefaultComboBoxModel(array));
        }
    }

    //initalize the enrolment panel
    private void setEnrolment() throws RemoteException {
        String title = subject.getTitle();
        subjectidLabel4.setText(subjectId);
        subjectnameLabel4.setText(title);
        String[] studentId = myServer.enrolmentInfo(subjectId);
        if (studentId == null) {
            enrolmentText.setText("");
        } else {
            String enrolmentString = "";
            for (int i = 0; i < studentId.length; i++) {
                enrolmentString = enrolmentString + studentId[i] + " ";
            }
            enrolmentText.setText(enrolmentString);
        }
    }
    // initalize the assessment panel

    private void setAssessment() {
        // set label to correct value
        String title = subject.getTitle();
        subjectidLabel2.setText(subjectId);
        subjectnameLabel2.setText(title);

        // get the tasks in subject
        try {
            Tasks[] tasks = myServer.getTasks(subjectId);

            //display the tasks;
            Vector<String> row;
            dtm = new DefaultTableModel();
            dtm.addColumn("Task Id");
            dtm.addColumn("Mark");
            dtm.addColumn("Description");
            for (int j = 0; j < tasks.length; j++) {
                row = new Vector();
                row.add(tasks[j].getTasksPK().getTaskid());
                row.add(tasks[j].getMark().toString());
                row.add(tasks[j].getDescription());
                dtm.addRow(row);
            }
            taskTable.setModel(dtm);
        } catch (RemoteException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }


    }
    private void updateSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSubjectActionPerformed
        try {
            // TODO add your handling code here:
            //set value

            myServer.setContent(ContentText.getText(), objectiveText.getText(), subjectId);
            String s = "Subject content and objectives updated for " + subjectId;
            message.setText(s);
            loginPane.setSelectedComponent(Messages);
            //objectiveText.setText(sArray[i].getObjectives());
        } catch (RemoteException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateSubjectActionPerformed

    private void deletAtaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletAtaskActionPerformed
        int selIndex = taskTable.getSelectedRow();

        dtm.removeRow(selIndex);



        // TODO add your handling code here:
    }//GEN-LAST:event_deletAtaskActionPerformed

    private void addAtaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAtaskActionPerformed
        Vector<String> row;
        row = new Vector();
        row.add(" ");
        row.add("0");
        row.add(" ");
        dtm.addRow(row);
        // TODO add your handling code here:
    }//GEN-LAST:event_addAtaskActionPerformed

    private void updateTasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTasksActionPerformed
        //checking the data 
        //add tasks into database
        //show message in the mesage panel.
        int rowCount = dtm.getRowCount();
        boolean flag = true;
        String tasks[][] = new String[rowCount][3];

        //check if the task id or mark is legal;
        for (int i = 0; i < rowCount; i++) {
            tasks[i][0] = dtm.getValueAt(i, 0).toString();
            for (int m = 0; m < i; m++) {
                if (tasks[i][0].equals(tasks[m][0])) {
                    flag = false;
                    break;
                }
            }

            // check if marks is integer use regular
            tasks[i][1] = dtm.getValueAt(i, 1).toString();
            Pattern pattern = Pattern.compile("[0-9]+");
            if (!pattern.matcher(tasks[i][1]).matches()) {
                flag = false;
                break;
            }
            tasks[i][2] = dtm.getValueAt(i, 2).toString();
        }
        if (flag != true) {
            message.setText("Update failed");
            loginPane.setSelectedComponent(Messages);
        } else {
            try {
                myServer.deleteAlltasks(subjectId);
            } catch (RemoteException ex) {
                Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                myServer.updateTasks(tasks, subjectId);
            } catch (RemoteException ex) {
                Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        message.setText("Update success");
        loginPane.setSelectedComponent(Messages);


    }//GEN-LAST:event_updateTasksActionPerformed

    private void updateEnrolmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEnrolmentActionPerformed
        try {
            String s = enrolmentText.getText();
            String[] old = myServer.enrolmentInfo(subjectId);
            String[] updated = s.split(" ");
            String add = "";
            String delete = "";


            // find the which one has been deleted from old studentid array;
            //call function to delete this studentid from database
            //make string for message panel to show
            if (old == null) {
                add = s;
                for (int i = 0; i < updated.length; i++) {
                    myServer.addEnrolment(updated[i], subjectId);
                }
            } else {
                for (int i = 0; i < old.length; i++) {
                    boolean flag = false;
                    for (int j = 0; j < updated.length; j++) {
                        if (old[i].equals(updated[j])) {
                            flag = true;
                        }
                    }
                    if (flag == false) {
                        delete = delete + old[i];
                        myServer.deleteEnrolment(old[i], subjectId);
                    }
                }
                // find the which one has been added from updated studentid array;
                //call function to add this studentid from database
                //make string for message panel to show
                for (int i = 0; i < updated.length; i++) {
                    boolean flag = false;
                    for (int j = 0; j < old.length; j++) {
                        if (updated[i].equals(old[j])) {
                            flag = true;
                        }
                    }
                    if (flag == false) {
                        add = add + updated[i];
                        myServer.addEnrolment(updated[i], subjectId);

                    }
                }
            }
            
            //show the message
            String aMessage = "";
            if (add == null && delete == null) {
                aMessage = "There is no change for your update";
            } else {
                aMessage = "The following changes have been made to " + subjectId + " .";
                if (!add.equals("")) {
                    aMessage = aMessage + "Added students: " + add;
                }
                if (!delete.equals("")) {
                    aMessage = aMessage + "Removed students: " + delete;
                }
            }
            message.setText(aMessage);
            loginPane.setSelectedComponent(Messages);
            setViewMarks();

            // TODO add your handling code here:
        } catch (RemoteException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        // the rest two panel is available now
        loginPane.setEnabledAt(6, true);
        loginPane.setEnabledAt(7, true);
        try {
            setUploadMarks();
        } catch (RemoteException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateEnrolmentActionPerformed
    public void setViewMarks() throws RemoteException {
        String title = subject.getTitle();
        subjectidLabel5.setText(subjectId);
        subjectnameLabel5.setText(title);
        String[] studentId = myServer.enrolmentInfo(subjectId);
        String nothing = "-";
        //display the tasks;


        try {



            Tasks[] tasks = myServer.getTasks(subjectId);
            mt = new DefaultTableModel();
            mt.setColumnCount((tasks.length + 2));
            mt.setRowCount((studentId.length + 1));
            markTable.setModel(mt);
            mt.setValueAt("Student Id", 0, 0);
            mt.setValueAt("Total", 0, (tasks.length+1));
            // first lay of for-loop is find the taskid and put to title.
            // second lay of for-loop is when tasks id id known, get the student mars set as a row

            //set the sutdent id in first column.
            int j = 1;
            for (int i = 0; i < studentId.length; i++) {
                mt.setValueAt(studentId[i], (i + 1), 0);
            }
            for (Tasks t : tasks) {
                mt.setValueAt(t.getTasksPK().getTaskid(), 0, j);

                for (int i = 0; i < studentId.length; i++) {
                    int mark = myServer.searchMark(studentId[i], subjectId, t.getTasksPK().getTaskid());
                    if (mark == 101) {
                        mt.setValueAt(nothing, (i + 1), j);
                    } else {
                        mt.setValueAt(mark, (i + 1), j);
                    }
                }
                j++;
            }
            
            for(int n=1;n<studentId.length + 1;n++)
            { 
                int total=0;
                for(int m=1;m<(tasks.length + 1);m++){
                String totalS;
                totalS=mt.getValueAt(n,m).toString();
                if(!totalS.equals("-")){
                total=Integer.parseInt(totalS);
                }
            }
                mt.setValueAt(total, n, tasks.length+1);
            }
           
           
            markTable.setModel(mt);
        } catch (RemoteException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }


    }
//get file and read file deal with file...
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        InputStream is = null;
        String invalidStudent = "Invalid Student : ";
        Object o = selectMarkBox.getSelectedItem();
        String taskid = o.toString();
        boolean exit;
        int mark;

        //Create a file chooser
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(loginPane);
        File file = fc.getSelectedFile();

        //change text field 's value
        fileName.setText(file.getPath());
        try {
            //open and read the file
            is = new FileInputStream(file);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        InputStreamReader isr = new InputStreamReader(is);
        BufferedReader reader = new BufferedReader(isr);
        try {
            String text = reader.readLine();
            while (text != null) {
                String[] pairs = text.split(" ");


                //check if the sutdent is exit and enroled in this subject
                exit = myServer.enrolmented(pairs[0], subjectId);
                if (exit) {
                    mark = Integer.parseInt(pairs[1]);

                    //check if the mark is less than the total mark in the task.
                    if (mark <= myServer.getTask(taskid, subjectId)) {
                        myServer.insertMark(subjectId, taskid, pairs[0], mark);
                    } else {
                        invalidStudent = invalidStudent + pairs[0] + " ";
                    }
                } else {
                    invalidStudent = invalidStudent + pairs[0] + " ";
                }
                text = reader.readLine();
            }
            message.setText(invalidStudent);
            loginPane.setSelectedComponent(Messages);

        } catch (IOException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }


        //



    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int columncount = markTable.getSelectedColumn();
        String taskid = markTable.getValueAt(0, columncount).toString();
        try {
            myServer.deleteTask(taskid);
        } catch (RemoteException ex) {
            Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        TableColumnModel columnModel = markTable.getColumnModel();
        TableColumn tableColumn = columnModel.getColumn(columncount);
        columnModel.removeColumn(tableColumn);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int i=0;

        int row[]=new int[markTable.getRowCount()];
        int col[]=new int[markTable.getColumnCount()];
        
        //when it is editing then get the rownumber and column number , stop editing.
        if(markTable.isEditing()){
            row[i]=markTable.getEditingRow();
            col[i]=markTable.getEditingColumn();
            markTable.getCellEditor().stopCellEditing();
            
            
            //get task id & student id & mark;
            String taskid=markTable.getValueAt(0, col[i]).toString();
            String studentid=markTable.getValueAt(row[i], 0).toString();
            String markS=markTable.getValueAt(row[i], col[i]).toString();
           
            int mark=Integer.parseInt(markS);
            
            
            //call remote method to update
            
            try {
                myServer.updateMark(taskid,studentid,subjectId,mark);
            } catch (RemoteException ex) {
                Logger.getLogger(NonsuchGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;




                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NonsuchGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NonsuchGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NonsuchGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NonsuchGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NonsuchGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Assessment;
    private javax.swing.JTextArea ContentText;
    private javax.swing.JPanel Enrolment;
    private javax.swing.JPanel LogInPage;
    private javax.swing.JPanel Messages;
    private javax.swing.JPanel SubjectDes;
    private javax.swing.JPanel SubjectSelection;
    private javax.swing.JLabel UniName;
    private javax.swing.JPanel UploadMarks;
    private javax.swing.JLabel UserNameLabel;
    private javax.swing.JPanel ViewMarks;
    private javax.swing.JButton addAtask;
    private javax.swing.JLabel contentLabel;
    private javax.swing.JButton deletAtask;
    private javax.swing.JTextArea enrolmentText;
    private javax.swing.JTextField fileName;
    private javax.swing.JLabel fullname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton login;
    private javax.swing.JTabbedPane loginPane;
    private javax.swing.JTable markTable;
    private javax.swing.JTextArea message;
    private javax.swing.JLabel nglogin;
    private javax.swing.JTextArea objectiveText;
    private javax.swing.JLabel passWord;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel role;
    private javax.swing.JComboBox selectMarkBox;
    private javax.swing.JComboBox selectSubject;
    private javax.swing.JButton selected;
    private javax.swing.JLabel subjectidLabel;
    private javax.swing.JLabel subjectidLabel2;
    private javax.swing.JLabel subjectidLabel3;
    private javax.swing.JLabel subjectidLabel4;
    private javax.swing.JLabel subjectidLabel5;
    private javax.swing.JLabel subjectnameLabel;
    private javax.swing.JLabel subjectnameLabel2;
    private javax.swing.JLabel subjectnameLabel3;
    private javax.swing.JLabel subjectnameLabel4;
    private javax.swing.JLabel subjectnameLabel5;
    private javax.swing.JTable taskTable;
    private javax.swing.JButton updateEnrolment;
    private javax.swing.JButton updateSubject;
    private javax.swing.JButton updateTasks;
    private javax.swing.JTextField userName;
    // End of variables declaration//GEN-END:variables
}
